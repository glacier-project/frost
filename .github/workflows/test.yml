name: Test Suite

on:
  push:
    branches: [ main, dev, feature/** ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  test:
    name: Test with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13", "3.14.0-rc.2"]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
        # Install any Python dependencies your tests might need
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test/requirements.txt ]; then pip install -r test/requirements.txt; fi
    
    - name: Install Lingua Franca Compiler
      run: |
        # Install lfc (Lingua Franca Compiler)
        # Adjust this based on how lfc should be installed in your environment
        curl -Ls https://install.lf-lang.org | bash -s cli
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Verify lfc installation
      run: |
        which lfc
        lfc --version
    
    - name: Make run_all.sh executable
      run: chmod +x test/run_all.sh
    
    - name: Build all tests
      run: make -C test build
      
    - name: Run all tests
      run: make -C test test
    
    - name: Upload test results on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: |
          test/bin/
          test/src-gen/
        retention-days: 7
    
    - name: Clean up
      if: always()
      run: make -C test clean

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Check test results
      run: |
        if [ "${{ needs.test.result }}" == "failure" ]; then
          echo "❌ Tests failed on one or more Python versions"
          exit 1
        elif [ "${{ needs.test.result }}" == "success" ]; then
          echo "✅ All tests passed on all Python versions"
        else
          echo "⚠️ Tests were cancelled or skipped"
          exit 1
        fi
