target Python 

import FrostMachine from "../../../../../frost/FrostMachine.lf"

reactor TrafficLight extends FrostMachine{
    state modality = {= self.data_model.get_node("TrafficLight/mode") =}
    state count = {= self.data_model.get_node("TrafficLight/count") =}
    state sigR = {= self.data_model.get_node("TrafficLight/sigR") =}
    state sigG = {= self.data_model.get_node("TrafficLight/sigG") =}
    state sigY = {= self.data_model.get_node("TrafficLight/sigY") =}
    state pedestrian = {= self.data_model.get_node("TrafficLight/pedestrian") =}
    timer t(0, 1sec)

    reaction(t) {=
        if (self.modality.value == 0):  # Mode 0: Red light
            if self.count.value >= 60:
                self.sigY.vlaue = True  # Yellow light for transition
                self.count.value = 0  # Reset count
                self.modality.value = 2
            self.count.value = (self.count.value + 1)

        elif (self.modality.value == 1):  # Mode 1: Green light
            if self.pedestrian.value:  # Pedestrian button pressed
                if self.count.value >= 60:
                    self.sigY.value = True # Yellow light for transition
                    self.count.value = 0  # Reset count
                    self.modality.value = 2

            self.count.value = (self.count.value + 1)
            self.pedestrian.value = False  # Reset pedestrian button

        elif (self.modality.value == 2):  # Mode 2: Flashing red light
            if self.count.value >= 5:
                self.modality.value = 3  # Switch to green light 
                self.count.value = 0  # Reset count
            else:
                self.count.value = (self.count.value + 1)
        else:            
            if self.sigR.value == True:
                self.sigR.value = False  # Turn off red light
                self.sigG.value = True
                self.modality.value = 1  # Switch to green light
            elif self.sigG.value == True:
                self.sigG.value = False
                self.sigR.value = True
                self.modality.value = 0  # Switch to red light
    =}
}